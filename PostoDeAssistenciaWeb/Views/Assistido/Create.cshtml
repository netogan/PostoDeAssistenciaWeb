@model PostoDeAssistenciaWeb.Models.Assistido

@{
    ViewBag.Title = "Create";

    var optionsSexo = new List<SelectListItem>();

    optionsSexo.Add(new SelectListItem { Value = "Masculino", Text = "Masculino", Selected = true });
    optionsSexo.Add(new SelectListItem { Value = "Feminino", Text = "Feminino" });

    ViewData["Sexo"] = optionsSexo;

    var listaAssistidos = new PostoDeAssistenciaWeb.Controllers.AssistidoController().ObterTodos().ToList();

}

<h2>@*Create*@</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        <h4>Assistido</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.NomeCompleto, "Nome completo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeCompleto, new { htmlAttributes = new { @class = "form-control", @style = "width: 350px; max-width: 900px;" } })
                @Html.ValidationMessageFor(model => model.NomeCompleto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })

            @*<div class="col-md-10">
                @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                </div>*@

            <div class="col-md-10">
                @Html.DropDownList("Sexo", null, htmlAttributes: new { @class = "form-control", @style = "width: 120px;", required = "Informe o sexo" })
                @*@Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Idade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Idade, new { htmlAttributes = new { @class = "form-control", @style = "width: 70px;", @min = 0, @max = 150 } })
                @Html.ValidationMessageFor(model => model.Idade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataNascimento, "Data nascimento", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
            </div>


            @*@Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.TextBoxFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DataNascimento)

                    @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                </div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GrauParentesco, "Grau parentesco", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GrauParentesco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GrauParentesco, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefone1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefone1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefone1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefone2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefone2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefone2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumeracaoCalcado, "Nº calçado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeracaoCalcado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeracaoCalcado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumeracaoRoupaSuperior, "Nº roupa (superior)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeracaoRoupaSuperior, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeracaoRoupaSuperior, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumeracaoRoupaInferior, "Nº roupa (inferior)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeracaoRoupaInferior, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeracaoRoupaInferior, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Principal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Principal)
                    @Html.ValidationMessageFor(model => model.Principal, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @*@Html.button(model => model.DependenteId, "Vínculo", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <button type="button" id="vinculo" class="control-label col-md-2 btn btn-secondary" style="text-align:center">Vinculo</button>
            <div class="col-md-10">
                @*@Html.ActionLink("Vinculo", "", null, new { @class = "btn btn-secondary" })*@
                @Html.EditorFor(model => model.DependenteId, new { htmlAttributes = new { @class = "form-control", @style = "display:none", @readonly = "readonly" } })
                @Html.Editor("Dependente", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DependenteId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-primary" })
                <input type="submit" value="Salvar" class="btn btn-success" />
            </div>
        </div>
    </div>

    //Popup
    <div id="dialog-modal" title="Selecione o vínculo">
        @*@Html.TextBox("pesquisa-assistido", null, new { htmlAttributes = new { @class = "form-control", @onkeydown = "findVinculo()" } })*@
        <input id="pesquisa" class="form-control" onkeyup="findVinculo()"/>
        <br />
        <br />
        <table id="tbVinculo" class="table">
            <tr>
                <th>
                    @Html.DisplayName("Nome completo")
                </th>
            </tr>
            <tbody id="tbVinculoBody">
                @foreach (var item in listaAssistidos)
                {
                    <tr>
                        <td>
                            <a href="#" style="text-decoration:none" onclick="setValorVinculo('@item.AssistidoId', '@item.NomeCompleto');">@item.NomeCompleto</a>
                        </td>
                    </tr>
                }
            </tbody>
            </table>
        </div>
    }



            @*<script src="~/Scripts/jquery-3.3.1.min.js"></script>
                <script src="~/Scripts/jquery.validate.min.js"></script>
                <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>*@

            @section Scripts {

                <script type="text/javascript" language="javascript">
                    $(function () {
                        $('input[type=datetime]').datepicker({
                            dateFormat: 'dd/mm/yy',
                            dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                            dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                            dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                            monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                            monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                            nextText: 'Proximo',
                            prevText: 'Anterior',
                            showOn: "button"
                        }).css("display", "inline-block")
                            .next("button").button({
                                icons: { primary: "ui-icon-calendar" },
                                label: "Selecione uma data",
                                text: false
                            });
                    });

                </script>

                <script>
                    $(function () {
                        $("#dialog-modal").dialog({
                            autoOpen: false,
                            width: 600,
                            height: 400,
                            modal: true
                        });

                        $("#vinculo").click(function () {
                            $("#dialog-modal").dialog("open");
                        });
                    });

                </script>

                <script>
                    function setValorVinculo(idVinculo, nomeVinculo) {
                        $("#Dependente").val(nomeVinculo);
                        $("#DependenteId").val(idVinculo);
                        $("#dialog-modal").dialog("close");
                    }
                </script>

                <script>
                    function findVinculo() {
                        $("#tbVinculoBody").empty();

                        $.ajax({
                            type: "GET",
                            url: "/Assistido/ObterPorNome",
                            datatype: "json",
                            data: {"nome": $("[id$=pesquisa]").val() },
                            success: function (result) {

                                for (l = 0; l < JSON.parse(result).length; l++) {
                                    $('#tbVinculoBody').append(
                                        `<tr>
                                            <td>
                                                <a href='#' style='text-decoration:none' onclick="setValorVinculo('${JSON.parse(result)[l].AssistidoId}', '${JSON.parse(result)[l].NomeCompleto}' ); "> ${JSON.parse(result)[l].NomeCompleto} </a>
                                            </td>
                                        </tr>`
                                    )
                                }
                            }
                            //,
                            //error: function () {
                            //    alert("error");
                            //}
                        });

                    }
                </script>

                @Scripts.Render("~/bundles/jqueryval")

            }
