@model PostoDeAssistenciaWeb.Models.Endereco

@{
    ViewBag.Title = "Create";

    var optionsUF = new List<SelectListItem>();

    optionsUF.Add(new SelectListItem { Value = "AC", Text = "AC", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "AL", Text = "AL", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "AP", Text = "AP", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "AM", Text = "AM", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "BA", Text = "BA", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "CE", Text = "CE", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "DF", Text = "DF", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "ES", Text = "ES", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "GO", Text = "GO", Selected = true });
    optionsUF.Add(new SelectListItem { Value = "MA", Text = "MA", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "MT", Text = "MT", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "MS", Text = "MS", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "MG", Text = "MG", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "PA", Text = "PA", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "PB", Text = "PB", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "PR", Text = "PR", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "PE", Text = "PE", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "PI", Text = "PI", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "RJ", Text = "RJ", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "RN", Text = "RN", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "RS", Text = "RS", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "RO", Text = "RO", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "RR", Text = "RR", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "SC", Text = "SC", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "SP", Text = "SP", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "SE", Text = "SE", Selected = false });
    optionsUF.Add(new SelectListItem { Value = "TO", Text = "TO", Selected = false });

    ViewData["Uf"] = optionsUF;

}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="max-width: 900px">
        <h4>Endereco</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Cep, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Uf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Uf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Uf", null, htmlAttributes: new { @class = "form-control", @style = "width: 120px;", required = "Informe a UF" })
                @Html.ValidationMessageFor(model => model.Uf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control", @Value = "Aparecida de Goiania" } })
                @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="width: 450px;">
                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control", @style = "width:100%; min-width:420px;" } })
                @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Logradouro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Logradouro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Complemento, 5, 40, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-primary" })
                <input type="submit" value="Salvar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@

    <script>
        $("#Cep").focusout(function () {
            $.ajax({
                type: "GET",
                url: '@Url.Action("ConsultarCep", "Endereco")',
                datatype: "json",
                data: { "cep": $("#Cep").val() },
                success: function (result) {

                    $("#Uf").val(JSON.parse(result).estado)
                    $("#Cidade").val(JSON.parse(result).cidade)
                    $("#Bairro").val(JSON.parse(result).bairro)
                    $("#Logradouro").val(JSON.parse(result).logradouro)
                }
            });
        });
    </script>
    
}
